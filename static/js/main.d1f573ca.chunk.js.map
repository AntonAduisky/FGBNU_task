{"version":3,"sources":["Components/BaseCurrency.js","Components/CurrencyList.js","Components/Table.js","App.js","serviceWorker.js","index.js"],"names":["BaseCurrency","_ref","onChange","valueCurrency","className","currencies","React","createElement","Fragment","FormControl","InputLabel","id","Select","labelId","value","MenuItem","map","currency","key","ID","CharCode","Name","FormHelperText","CurrencyList","cacluteCurrencyValue","baseCurrency","onCurrencyCheckboxClick","onCurrencyChecked","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","FormControlLabel","control","Checkbox","checked","icon","StarBorderIcon","checkedIcon","StarIcon","name","color","scope","Nominal","Value","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","table","BasicTable","classes","_useState","useState","_useState2","_slicedToArray","cbrJson","setCbrJson","_useState3","_useState4","baseCurrencyCharcode","setBaseCurrencyCharcode","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","window","localStorage","getItem","JSON","parse","_useState8","favorites","setFavorites","catchMessages","status","message","Valute","index","find","includes","useEffect","_asyncToGenerator","_callee","_context","axios","data","t0","apply","arguments","fetchCbrJson","sort","a","b","compareByName","e","target","filter","newFav","f","concat","_toConsumableArray","setItem","stringify","makeFavorite","toFixed","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","App","CssBaseline","Container","maxWidth","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.d1f573ca.chunk.js","sourcesContent":["import React from 'react';\nimport { FormControl, FormHelperText, InputLabel, MenuItem, Select } from '@material-ui/core';\n\nconst BaseCurrency = ({ onChange, valueCurrency, className, currencies }) => {\n  return (\n    <>\n      <FormControl className={className}>\n        <InputLabel id=\"base-currency\">Базовая валюта</InputLabel>\n        <Select\n          labelId=\"base-currency\"\n          id=\"select-base-currency\"\n          value={valueCurrency}\n          onChange={onChange}>\n          <MenuItem value=\"\">\n            <em>Российский рубль</em>\n          </MenuItem>\n          {currencies &&\n            currencies.map((currency) => (\n              <MenuItem key={currency.ID} value={currency.CharCode}>\n                {currency.Name}\n              </MenuItem>\n            ))}\n        </Select>\n        <FormHelperText>Выберите базовую валюту</FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n\nexport default BaseCurrency;\n","import React from \"react\";\nimport {\n  Checkbox,\n  FormControlLabel,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport StarIcon from \"@material-ui/icons/Star\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\n\nconst CurrencyList = ({\n  className,\n  currencies,\n  cacluteCurrencyValue,\n  baseCurrency,\n  onCurrencyCheckboxClick,\n  onCurrencyChecked,\n}) => {\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={className} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Избранное</TableCell>\n              <TableCell>Валюта</TableCell>\n              <TableCell align=\"right\">Единиц</TableCell>\n              <TableCell align=\"right\">Буквенный код</TableCell>\n              <TableCell align=\"right\">Курс</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {currencies &&\n              currencies\n                .map((currency) => (\n                  <TableRow key={currency.ID}>\n                    <TableCell align=\"center\">\n                      <FormControlLabel\n                        control={\n                          <Checkbox\n                            onChange={() => onCurrencyCheckboxClick(currency.ID)}\n                            checked={onCurrencyChecked}\n                            icon={<StarBorderIcon />}\n                            checkedIcon={<StarIcon />}\n                            name=\"checkedH\"\n                            color=\"default\"\n                          />\n                        }\n                      />\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {currency.Name}\n                    </TableCell>\n                    <TableCell align=\"right\">{currency.Nominal}</TableCell>\n                    <TableCell align=\"right\">{currency.CharCode}</TableCell>\n                    <TableCell align=\"right\">\n                      {baseCurrency\n                        ? cacluteCurrencyValue(baseCurrency, currency)\n                        : currency.Value}\n                    </TableCell>\n                  </TableRow>\n                ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default CurrencyList;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Snackbar } from '@material-ui/core';\nimport BaseCurrency from '../Components/BaseCurrency';\nimport CurrencyList from '../Components/CurrencyList';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nconst BasicTable = () => {\n  const classes = useStyles();\n  const [cbrJson, setCbrJson] = useState({});\n  const [baseCurrencyCharcode, setBaseCurrencyCharcode] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [favorites, setFavorites] = useState(\n    window.localStorage.getItem('favorite_currency_ids')\n      ? JSON.parse(window.localStorage.getItem('favorite_currency_ids'))\n      : [],\n  );\n\n  const catchMessages = (error) => {\n    if (error.result && error.result.status) {\n      switch (error.result.status) {\n        case 500:\n          setErrorMessage('Cерверная ошибка');\n          break;\n        case 404:\n          setErrorMessage('Cущность не найдена в системе');\n          break;\n        case 400:\n          setErrorMessage('Неверный запрос');\n          break;\n        case 200:\n          setErrorMessage('Верный запрос');\n          break;\n        default:\n          setErrorMessage(error.message);\n      }\n    } else {\n      setErrorMessage(error.message);\n    }\n  };\n\n  const handleChange = (e) => {\n    setBaseCurrencyCharcode(e.target.value);\n  };\n  const currencies = cbrJson.Valute\n    ? Object.keys(cbrJson.Valute).map((key, index) => cbrJson.Valute[key])\n    : [];\n  const baseCurrency = currencies.find((currency) => currency.CharCode === baseCurrencyCharcode);\n  const onCurrencyChecked = favorites.includes(currencies.id);\n\n  const API_URL = 'https://www.cbr-xml-daily.ru/daily_json.js';\n  const cacluteCurrencyValue = (baseCurrency, currency) => {\n    return (currency.Value / baseCurrency.Value).toFixed(4);\n  };\n  const makeFavorite = (newFav) => {\n    window.localStorage.setItem('favorite_currency_ids', JSON.stringify(newFav));\n  };\n\n  useEffect(() => {\n    const fetchCbrJson = async () => {\n      try {\n        const result = await axios(API_URL);\n        setCbrJson(result.data);\n        setErrorMessage('Верный запрос');\n      } catch (error) {\n        catchMessages(error);\n      }\n    };\n    fetchCbrJson();\n  }, []);\n\n  const compare = (a, b) => {\n    const compareByName = (a, b) => a.Name - b.Name;\n    if (\n      (favorites.includes(a.ID) && favorites.includes(b.ID)) ||\n      (!favorites.includes(a.ID) && !favorites.includes(b.ID))\n    ) {\n      return compareByName(a, b);\n    } else if (favorites.includes(a.ID) && !favorites.includes(b.ID)) {\n      return -1;\n    } else {\n      return 1;\n    }\n  };\n  currencies.sort(compare);\n\n  return (\n    <>\n      <BaseCurrency\n        onChange={handleChange}\n        valueCurrency={baseCurrencyCharcode}\n        className={classes.formControl}\n        currencies={currencies}\n      />\n      <CurrencyList\n        className={classes.table}\n        currencies={currencies.filter((currency) => currency.CharCode !== baseCurrencyCharcode)}\n        favorites={favorites}\n        onCurrencyCheckboxClick={(id) => {\n          const newFav = favorites.includes(id)\n            ? favorites.filter((f) => f !== id)\n            : [...favorites, id];\n          setFavorites(newFav);\n          makeFavorite(newFav);\n        }}\n        checked={onCurrencyChecked}\n        cacluteCurrencyValue={cacluteCurrencyValue}\n        baseCurrency={baseCurrency}\n      />\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={errorMessage !== ''}\n        autoHideDuration={2500}\n        onClose={() => setErrorMessage('')}\n        message={errorMessage}\n      />\n    </>\n  );\n};\n\nexport default BasicTable;\n","import React from 'react';\nimport { Container, CssBaseline } from '@material-ui/core';\nimport BasicTable from './Components/Table';\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <BasicTable />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}